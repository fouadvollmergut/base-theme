/*
 *  Grid System
 *  Author: Fouad Vollmer & Gut Werbeagentur GbR
 *  Author URI: https://www.fouadvollmergut.de
 *  Version: 1.0.0
 */


:root {
  // Grid margins are globally accessible
  --grid-margin-left: 15px;
  --grid-margin-right: 15px;
  --grid-max-width-value: 1800px;
}

$grid-col-count: 6;
$grid-max-width-value: var(--grid-max-width-value);

$grid-margin-left: var(--grid-margin-left);
$grid-margin-right: var(--grid-margin-right);
$grid-total-col-count: $grid-col-count + 2;
$grid-max-width: calc(#{$grid-max-width-value} + #{$grid-margin-left} + #{$grid-margin-right});
$grid-col-width: calc((100% - (#{$grid-margin-left} + #{$grid-margin-right})) / #{$grid-col-count});

.grid {
  position: relative;
  display: grid;
  grid-template-columns: [start] auto [inner-start] $grid-margin-left [content-start] repeat($grid-col-count, $grid-col-width) [content-end] $grid-margin-right [inner-end] auto [end];
  grid-auto-flow: row dense;
  max-width: $grid-max-width;
  // margin: 0 auto;

  .subgrid {
    display: grid;
    grid-column-start: content-start;
    grid-column-end: content-end;
    grid-template-columns: subgrid;
    grid-auto-flow: row dense;
    row-gap: calc(var(--inner-spacing-lg) * 2);
  }

  .custom-subgrid {
    display: grid;
    grid-template-columns: subgrid;
    grid-auto-flow: row dense;
    row-gap: calc(var(--inner-spacing-lg) * 2);
    // Needs custom specification for grid-column-start and grid-column-end
  }
}

// From Mobile up: Column Classes Maingrid

[class^='col-'],
[class*=' col-'] {
  @for $i from 1 through $grid-total-col-count {
    &[class*='p#{$i}'] {
      grid-column-start: start;
    }

    &[class*='w#{$i}'] {
      grid-column-end: end;
    }
  }
}

// From Mobile up: Column Classes Subgrid

.subgrid {
  > [class^='col-'],
  > [class*=' col-'] {
    // Classes for each col size
    @for $i from 1 through $grid-col-count {
      &[class*='p#{$i}'] {
        grid-column-start: 1;
      }

      &[class*='w#{$i}'] {
        grid-column-end: span $grid-col-count;
      }
    }

    // Dividers for up to 5 content columns 
    @for $i from 1 through 5 {
      @for $j from 1 through $i {
        &[class*='d#{$i}c#{$j}'] {
          grid-column-start: 1;
        }
      }

      &[class*='d#{$i}'] {
        grid-column-end: span round(down, calc(#{$grid-col-count} / 1), 1);
      }
    }

    &[class*='pauto'] {
      grid-column-start: auto;
    }

    &[class*='wauto'] {
      grid-column-end: auto;
    }
  }
}


// Device Size: Tablet
@include device-size('tablet') {
  :root {
    // Grid margins are globally accessible
    --grid-margin-left: 50px;
    --grid-margin-right: 50px;
  }

  $grid-margin-left: var(--grid-margin-left);
  $grid-margin-right: var(--grid-margin-right);
  $grid-col-width: calc((100% - (#{$grid-margin-left} + #{$grid-margin-right})) / #{$grid-col-count});

  .grid {
    grid-template-columns: [start] auto [inner-start] $grid-margin-left [content-start] repeat($grid-col-count, $grid-col-width) [content-end] $grid-margin-right [inner-end] auto [end];
  }

  // From Tablet up: Column Classes Maingrid

  [class^='col-'],
  [class*=' col-'] {
    @for $i from 1 through $grid-total-col-count {
      &[class*='p#{$i}'] {
        grid-column-start: #{$i};
      }

      &[class*='w#{$i}'] {
        grid-column-end: span #{$i};
      }
    }
  }

  // From Tablet up: Column Classes Subgrid

  .subgrid {
    > [class^='col-'],
    > [class*=' col-'] {
      // Classes for each col size
      @for $i from 1 through $grid-col-count {
        &[class*='p#{$i}'] {
          grid-column-start: #{$i};
        }

        &[class*='w#{$i}'] {
          grid-column-end: span #{$i};
        }
      }

      // Dividers for up to 5 content columns 
      @for $i from 1 through 5 {
        @for $j from 1 through $i {
          &[class*='d#{$i}c#{$j}'] {
            grid-column-start: calc(round(down, calc(#{$grid-col-count} / #{$i}), 1) * #{$j} - round(down, calc(#{$grid-col-count} / #{$i}), 1) + 1);
          }
        }

        &[class*='d#{$i}'] {
          grid-column-end: span round(down, calc(#{$grid-col-count} / #{$i}), 1);
        }
      }

      &[class*='pauto'] {
        grid-column-start: auto;
      }

      &[class*='wauto'] {
        grid-column-end: auto;
      }
    }
  }
}

// Device Size: Grid Max Size
@include device-size('grid') {
  .grid {
    grid-template-columns: [start] auto [inner-start] $grid-margin-left [content-start] repeat($grid-col-count, calc(#{$grid-max-width} / #{$grid-col-count})) [content-end] $grid-margin-right [inner-end] auto [end];
    margin: unset;
    width: 100%;
    max-width: unset;
  }
}